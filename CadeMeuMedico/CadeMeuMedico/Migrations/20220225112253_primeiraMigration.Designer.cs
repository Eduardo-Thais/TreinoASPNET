// <auto-generated />
using System;
using CadeMeuMedico.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CadeMeuMedico.Migrations
{
    [DbContext(typeof(MedicosContext))]
    [Migration("20220225112253_primeiraMigration")]
    partial class primeiraMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CadeMeuMedico.Models.CidadeModel", b =>
                {
                    b.Property<int>("IDCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCidade");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("CadeMeuMedico.Models.EspecialidadeModel", b =>
                {
                    b.Property<int>("IDEspecialidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDEspecialidade");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("CadeMeuMedico.Models.MedicoModel", b =>
                {
                    b.Property<int>("IDMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AtendePorConvenio")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FKCidadeIDCidade")
                        .HasColumnType("int");

                    b.Property<int?>("FKEspecialidadeIDEspecialidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TemClinica")
                        .HasColumnType("bit");

                    b.Property<string>("WebsiteBlog")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDMedico");

                    b.HasIndex("FKCidadeIDCidade");

                    b.HasIndex("FKEspecialidadeIDEspecialidade");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("CadeMeuMedico.Models.UsuarioModel", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("CadeMeuMedico.Models.MedicoModel", b =>
                {
                    b.HasOne("CadeMeuMedico.Models.CidadeModel", "FKCidade")
                        .WithMany("FKMedico")
                        .HasForeignKey("FKCidadeIDCidade");

                    b.HasOne("CadeMeuMedico.Models.EspecialidadeModel", "FKEspecialidade")
                        .WithMany("FKMedico")
                        .HasForeignKey("FKEspecialidadeIDEspecialidade");

                    b.Navigation("FKCidade");

                    b.Navigation("FKEspecialidade");
                });

            modelBuilder.Entity("CadeMeuMedico.Models.CidadeModel", b =>
                {
                    b.Navigation("FKMedico");
                });

            modelBuilder.Entity("CadeMeuMedico.Models.EspecialidadeModel", b =>
                {
                    b.Navigation("FKMedico");
                });
#pragma warning restore 612, 618
        }
    }
}
